/*!
 * Colors Picker - 一个类似浏览器调试工具中颜色选择器的H5版本的小组件。
 * git+https://github.com/hai2007/colors-picker.git
 *
 * author 你好2007 < https://hai2007.gitee.io/sweethome >
 *
 * version 0.1.0-alpha
 *
 * Copyright (c) 2021 hai2007 走一步，再走一步。
 * Released under the MIT license
 *
 * Date:Sat Nov 27 2021 14:28:24 GMT+0800 (GMT+08:00)
 */
(function(){"use strict";function _typeof(obj){"@babel/helpers - typeof";if(typeof Symbol==="function"&&typeof Symbol.iterator==="symbol"){_typeof=function(obj){return typeof obj}}else{_typeof=function(obj){return obj&&typeof Symbol==="function"&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj}}return _typeof(obj)}function _unsupportedIterableToArray(o,minLen){if(!o)return;if(typeof o==="string")return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);if(n==="Object"&&o.constructor)n=o.constructor.name;if(n==="Map"||n==="Set")return Array.from(o);if(n==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen)}function _arrayLikeToArray(arr,len){if(len==null||len>arr.length)len=arr.length;for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}function _createForOfIteratorHelper(o,allowArrayLike){var it=typeof Symbol!=="undefined"&&o[Symbol.iterator]||o["@@iterator"];if(!it){if(Array.isArray(o)||(it=_unsupportedIterableToArray(o))||allowArrayLike&&o&&typeof o.length==="number"){if(it)o=it;var i=0;var F=function(){};return{s:F,n:function(){if(i>=o.length)return{done:true};return{done:false,value:o[i++]}},e:function(e){throw e},f:F}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var normalCompletion=true,didErr=false,err;return{s:function(){it=it.call(o)},n:function(){var step=it.next();normalCompletion=step.done;return step},e:function(e){didErr=true;err=e},f:function(){try{if(!normalCompletion&&it.return!=null)it.return()}finally{if(didErr)throw err}}}}var REGEXP={whitespace:"[\\x20\\t\\r\\n\\f]"};function getStyle(dom,name){var allStyle=document.defaultView&&document.defaultView.getComputedStyle?document.defaultView.getComputedStyle(dom,null):dom.currentStyle;return typeof name==="string"?allStyle.getPropertyValue(name):allStyle}
/*!
   * 🌐 - 颜色格式化
   * https://github.com/hai2007/browser.js/blob/master/formatColor.js
   *
   * author hai2007 < https://hai2007.gitee.io/sweethome >
   *
   * Copyright (c) 2021-present hai2007 走一步，再走一步。
   * Released under the MIT license
   */function formatColor(color){var colorNode=document.getElementsByTagName("head")[0];colorNode.style["color"]=color;var rgba=getStyle(colorNode,"color");var rgbaArray=rgba.replace(/^rgba?\(([^)]+)\)$/,"$1").split(new RegExp("\\,"+REGEXP.whitespace));return[+rgbaArray[0],+rgbaArray[1],+rgbaArray[2],rgbaArray[3]==undefined?1:+rgbaArray[3]]}function mount(target,color,callback){console.log(target,color,callback)}var ColorsPicker=function ColorsPicker(el,initColor){var target=el;var color=initColor?formatColor(initColor):[255,255,255,1];var callbacks=[];var ColorsPickerInstance={then:function then(callback){callbacks.push(callback);return ColorsPickerInstance}};mount(target,color,(function(_color){var _iterator=_createForOfIteratorHelper(callbacks),_step;try{for(_iterator.s();!(_step=_iterator.n()).done;){var callback=_step.value;callback(_color)}}catch(err){_iterator.e(err)}finally{_iterator.f()}}));return ColorsPickerInstance};if((typeof module==="undefined"?"undefined":_typeof(module))==="object"&&_typeof(module.exports)==="object"){module.exports=ColorsPicker}else{window.ColorsPicker=ColorsPicker}})();